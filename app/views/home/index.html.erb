    <div class="top-cont 
      container-fluid 
      row" 
      style=""
      >
      
      
    
        <% if !user_signed_in? %>
            <span class="top-buttons position-absolute mt-5 ml-5" style="z-index: 30;"> 
          <%# link_to 'Sign in', new_user_session_path %>
 
          <%# <h4 class="d-none"> Create a free account first or log in to create a project and get an estimate</h4> %>
          <%# render 'shared/sign_up_create'%>
          
            <%= link_to 'Register', new_user_registration_path, class:"card__wish-list", style:"width: 12rem;" %>   
              </span>
              <% else %>
                <%= phone_number_link("(587) 841-0708") %>
             
          <% end %>
        
    
      <div class='col-12 row d-flex '>

        <a href="<%= root_path%>" class="m-auto" >
          <%= image_tag("logo/gradient-logo-nobg-500x300.png", alt: "segura and company logo", class:"", id: "top-logo"
        )%>
        </a>    
      </div> 
      <div class="col-12">
        <svg class="waves" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28" preserveAspectRatio="none" shape-rendering="auto">
      <defs>
      <path id="gentle-wave" d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z" />
      </defs>
      <g class="parallax">
      <use xlink:href="#gentle-wave" x="48" y="0" fill="rgba(255,255,255,0.7" />
      <use xlink:href="#gentle-wave" x="48" y="3" fill="rgba(255,255,255,0.5)" />
      <use xlink:href="#gentle-wave" x="48" y="5" fill="rgba(255,255,255,0.3)" />
      <use xlink:href="#gentle-wave" x="48" y="7" fill="#fff" />
      </g>
        </svg>
      </div>
      <div class="col-md-6
       d-flex
       " 
       style=""
       >
        <div class="" style="margin: auto;">
          <h1 class="top-section-title d-none"></h1>
          <br>
          <h4 class=" font-weight-bold
            text-muted mt-2 " >
            Commercial + Residential 
          </h4>
          <br>
          <h2 class="display text-uppercase
            text-break font-weight-bolder mt-2">Poured Concrete Foundation Retaining Walls 
          </h2> 
          <button class="cta-schedule" >
            <%= link_to 'Schedule a Project', new_dashboard_url, class:'', style:'font-size: 1rem;color: white;' %>
          </button>
          
        </div>
      </div>

      <div id='wall-img' class="col-md-6 d-block 
       align-items-center" style="" >
        <%= image_tag("no-bg-elements/wall-side-nobg.png", alt: "poured concrete retaining wall illustration", id: 'wall-img-png', class: '',:style => "border-radius: 20px;margin: auto;") %>
      </div>

      <%= render 'shared/cost' %>
      <div class="col-12 row d-none border-element" style="height: 500px;">
      <div class="col-md-6 
        d-flex flex-column border-element">
        <h1>Card Title </h1>
        <p>This is a long paragraph. <br>this should break a line <br>this is the last and final sentence.
        </p>
        <button>Click me </button>
      </div >
      <div class="col-md-6 d-flex flex-row border-element">
        <h1>Card Title </h1>
        <p>This is a long paragraph. <br>this should break a line <br>this is the last and final sentence.
        </p>
      </div >
      </div >
       <div class="row wrapper d-none">
      <div class=" card col-lg-4 card--19">
        <div class="card__header card__header--19">
          <div class="card__watermark" data-watermark="Air"></div>

          <img src="https://i.ibb.co/q7RKcZk/nike.png" alt="Nike" class="card__logo card__will-animate">

          <span class="card__price card__will-animate">$120</span>

          <h1 class="card__title card__will-animate">Air Structure 1</h1>
          <span class="card__subtitle card__will-animate">From the Flymesh upper to the triple-density foam midsole, the Nike Air Zoom Structure 19 Men's Running Shoe offers plenty of support and the response you need for a smooth, stable ride that feels ultra fast.</span>

          </div>

        <div class="card__body">
          
          <img src="https://i.ibb.co/R0Y8T8r/nike19.png" alt="Nike 19" class="card__image card__will-animate">
          <div class="card__wish-list card__wish-list--19 card__will-animate">Wish List</div>

          <span class="card__category card__will-animate">Men's running shoe</span>
        </div>
      </div>

       <!-- Nike Solstice -->
      <div class="card col-lg-4 card--solstice">
        <div class="card__header card__header--solstice">
          <div class="card__watermark" data-watermark="Classic"></div>

          <img src="https://i.ibb.co/q7RKcZk/nike.png" alt="Nike" class="card__logo card__will-animate">

          <span class="card__price card__will-animate">$129</span>

          <h1 class="card__title card__will-animate">Air Solstice QS</h1>
          <span class="card__subtitle card__will-animate">The Nike Air Solstice draws inspiration from the swoosh's classic running shoes of the 1980's updating the style with premium materials and impressive production quality.</span>

        </div>

        <div class="card__body">
         
           <img src="https://i.ibb.co/ZMVHp6x/nike-air-solstice.png" alt="Nike Solstice" class="card__image card__will-animate">
          <div class="card__wish-list card__wish-list--solstice card__will-animate">Wish List</div>

          <span class="card__category card__will-animate">Men's shoe</span>
        </div>
      </div>

      <!-- Nike Huarache -->
      <div class="card col-lg-4 card--huarache">
        <div class="card__header card__header--huarache">
          <div class="card__watermark" data-watermark="Safari"></div>

          <img src="https://i.ibb.co/q7RKcZk/nike.png" alt="Nike" class="card__logo card__will-animate">

          <span class="card__price card__will-animate">$140</span>

          <h1 class="card__title card__will-animate">Air Huarache Utility</h1>
          <span class="card__subtitle card__will-animate">The Nike Air Huarache Utility Men's Shoe toughens up a famous running shoe with a nylon upper, fused mudguard and vibrant detail.</span>
           
        </div>
        
        <div class="card__body">
         <img src="https://i.ibb.co/9bc3SYK/nike-safari.png" alt="Nike Huarache" class="card__image card__will-animate">
          <a class="card__wish-list card__wish-list--solstice card__will-animate">Wish List</a>

          <span class="card__category card__will-animate">Men's shoe</span>
        </div>
      </div>

      </div>
        <div class="cards-placeholder">
      <div class="cards-placeholder__item"></div>
      <div class="cards-placeholder__item"></div>
      <div class="cards-placeholder__item"></div>
    </div>

      <div class="container"> 
            <div class="slider">

                <div class="box1 box ">
                    <div class="bg"></div>

                     <div class="illustration "> <div class="inner"><%= image_tag("no-bg-elements/concrete-blocks.png",alt: "reinforced concrete wall" , class:"slide-image first", :style => "") %>
                      </div></div>

                    <div class="details col-md-6 d-flex flex-column">
                        <h2 class='' style="">Reinforced Concrete Retaining Walls</h2>
                        <p class="first">
                         1-4 weeks completion time 
                         <br/>Poured in one day<br/>
          Low maintainance <br/>
          Fire & Water Resistant
                           
                        </p>
                        <%= link_to 'Talk to a project manager', new_dashboard_url, class:'slider-button' %>
                    </div>

                   
                </div>
                                
                
                <div class="box2 box">
                    <div class="bg"></div>


                    <div class="illustration"><div class="inner">
                      <%= image_tag("no-bg-elements/rebar1-removebg.png",alt: "reinforced concrete wall" , class:"slide-image second", :style => "") %> 
                     </div></div>

                    <div class="details col-md-6 d-flex flex-column">
                        <h2>Reinforced For Performance</h2>
                        <p>
                          Steel Rebar Reinforcements
                           <br/>
                          ultimate flexural strength greater than block <br/>
                          up to 30000 lbs of lateral resistance
                        </p>
                        <%= link_to 'Schedule a Project', new_dashboard_url, class:'slider-button' %>
                    </div>

                </div>
                                
                <div class="box3 box">
                    <div class="bg"></div>

                    <div class="illustration">
                      <div class="inner">
                        <%= image_tag("no-bg-elements/tools-equipment-bags-removebg.png",alt: "finished poured concrete retaining wall" , class:"slide-image third", :style => "") %>
                      </div>
                    </div>

                    <div class="details col-md-6 d-flex flex-column">
                        <h2>Top Engineering</h2>
                        <p>
                        20+ years of experience
                        <br/>
                        Safety focused 
                        <br/>
                        Incresed efficiency
                        <br/>
                        Lower cost
                        </p>
                        <%= mail_to 'Seguraretainingwalls@gmail.com', "Email Me", class:'slider-button' %>
                    </div>

                   
                </div>
                                
                <div class="box4 box">
                    <div class="bg"></div>

                    <div class="illustration">
                    <div class="inner">
                      <%= image_tag("no-bg-elements/cgi-blue-forms-stack-set-no-bg.png",alt: "reinforced concrete wall" , class:"slide-image fourth", :style => "") %>  
                      <%= image_tag("no-bg-elements/cgi-red-forms-standing-nobg.png",alt: "reinforced concrete wall" , class:"slide-image fourth d-none", :style => "") %>  
                    </div>
                    </div>

                    <div class="details col-md-6 d-flex flex-column">
                        <h2>Built with pride</h2>
                        <p>
                            Pride in our Service 
                            <br/>
                            Pride in our work
                           <br/>
                           Bonded + Insured 
                           <br
                           />
                          Always American made materials
                        </p>
                         <%# link_to 'Call now', new_dashboard_url, class:'slider-button' %>
                         <a href="" class="slider-button" >Call now </a>
                    </div>

                </div>
                                
                <%# <div class="box5 box d-none">
                    <div class="bg"></div>
                    <div class="details">
                        <h1>Rebar Reinforcement</h1>
                        <p>
                            Lorem ipsum dolor sit amet, consectetur adipiscing 
                            elit. Integer lacinia dui lectus. Donec scelerisque ipsum
                            diam, ac mattis orci pellentesque eget. 
                        </p>
                        <button>Check Now</button>
                    </div>

                    <div class="illustration"><div class="inner">
                     
                    </div></div>
                </div> %>
                                
            </div>

            <svg xmlns="http://www.w3.org/2000/svg" class="prev" width="56.898" height="91" viewBox="0 0 56.898 91"><path d="M45.5,0,91,56.9,48.452,24.068,0,56.9Z" transform="translate(0 91) rotate(-90)" fill="#fff"/></svg>
            <svg xmlns="http://www.w3.org/2000/svg" class="next" width="56.898" height="91" viewBox="0 0 56.898 91"><path d="M45.5,0,91,56.9,48.452,24.068,0,56.9Z" transform="translate(56.898) rotate(90)" fill="#fff"/></svg>
           
      </div>   
            <div class="trail">
                    <div class="box1 active">1</div>
                    <div class="box2">2</div>
                    <div class="box3">3</div>
                    <div class="box4">4</div>
                    <%# <div class="box5 d-none">5</div> %>
            </div>
      
      
      <script src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/16327/gsap-latest-beta.min.js"></script>
      
      <%# <script src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/16327/CSSRulePlugin3.min.js"></script>
         %>
        <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.3.2/gsap.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.3.2/CSSRulePlugin.min.js"></script> -->
<script>
(function () {
  'use strict';

  var BODY_BACKGROUNDS = [
    '#8850FF',
    '#FFBA00',
    '#4054FF'
  ];

  function Slider () {
    this.cards = document.querySelectorAll('.card');

    this.currentIndex = 0;

    this.isDragging = false;
    this.startX = 0;
    this.currentX = 0;

    this.initEvents();
    this.setActivePlaceholder();
  }

  // initialize drag events
  Slider.prototype.initEvents = function () {
    document.addEventListener('touchstart', this.onStart.bind(this));
    document.addEventListener('touchmove', this.onMove.bind(this));
    document.addEventListener('touchend', this.onEnd.bind(this));

    document.addEventListener('mousedown', this.onStart.bind(this));
    document.addEventListener('mousemove', this.onMove.bind(this));
    document.addEventListener('mouseup', this.onEnd.bind(this));

  };

  // set active placeholder
  Slider.prototype.setActivePlaceholder = function () {
    var placeholders = document.querySelectorAll('.cards-placeholder__item');
    var activePlaceholder = document.querySelector('.cards-placeholder__item--active')

    if (activePlaceholder) {
      activePlaceholder.classList.remove('cards-placeholder__item--active');
    }

    placeholders[this.currentIndex].classList.add('cards-placeholder__item--active');

    // var bodyEl = document.querySelector('body');
    // bodyEl.style.backgroundColor = BODY_BACKGROUNDS[this.currentIndex];
  };

  // mousedown event
  Slider.prototype.onStart = function (evt) {
    this.isDragging = true;

    this.currentX = evt.pageX || evt.touches[0].pageX;
    this.startX = this.currentX;

    var card = this.cards[this.currentIndex];

    // calculate ration to use in parallax effect
    this.windowWidth = window.innerWidth;
    this.cardWidth = card.offsetWidth;
    this.ratio = this.windowWidth / (this.cardWidth / 4);
  };

  // mouseup event
  Slider.prototype.onEnd = function (evt) {
    this.isDragging = false;

    var diff = this.startX - this.currentX;
    var direction = (diff > 0) ? 'left' : 'right';
    this.startX = 0;

    if (Math.abs(diff) > this.windowWidth / 4) {
      if (direction === 'left') {
        this.slideLeft();
      } else if (direction === 'right') {
        this.slideRight();
      } else {
        this.cancelMoveCard();
      }

    } else {
      this.cancelMoveCard();

    }

  };

  // mousemove event
  Slider.prototype.onMove = function (evt) {
    if (!this.isDragging) return;

    this.currentX = evt.pageX || evt.touches[0].pageX;
    var diff = this.startX - this.currentX;
    diff *= -1;

    // don't let drag way from the center more than quarter of window
    if (Math.abs(diff) > this.windowWidth / 4) {
      if (diff > 0) {
        diff = this.windowWidth / 4;
      } else {
        diff = - this.windowWidth / 4;
      }
    }

    this.moveCard(diff);
  };

  // slide to left direction
  Slider.prototype.slideLeft = function () {
    // if last don't do nothing
    if (this.currentIndex === this.cards.length - 1) {
      this.cancelMoveCard();
      return;
    }

    var self = this;
    var card = this.cards[this.currentIndex];
    var cardWidth = this.windowWidth / 2;

    card.style.left = '-50%';

    this.resetCardElsPosition();

    this.currentIndex += 1;
    this.setActivePlaceholder();
    card = this.cards[this.currentIndex];

    card.style.left = '50%';

    this.moveCardEls(cardWidth * 3);

    // add delay to resetting position
    setTimeout(function () {
      self.resetCardElsPosition();
    }, 50);
  };

  // slide to right direction
  Slider.prototype.slideRight = function () {
    // if last don't do nothing
    if (this.currentIndex === 0) {
      this.cancelMoveCard();
      return;
    }

    var self = this;
    var card = this.cards[this.currentIndex];
    var cardWidth = this.windowWidth / 2;

    card.style.left = '150%';

    this.resetCardElsPosition();

    this.currentIndex -= 1;
    this.setActivePlaceholder();
    card = this.cards[this.currentIndex];

    card.style.left = '50%';

    this.moveCardEls(-cardWidth * 3);

    // add delay to resetting position
    setTimeout(function () {
      self.resetCardElsPosition();
    }, 50);
  };

  // put active card in original position (center)
  Slider.prototype.cancelMoveCard = function () {
    var self = this;
    var card = this.cards[this.currentIndex];

    card.style.transition = 'transform 0.5s ease-out';
    card.style.transform = '';

    this.resetCardElsPosition();
  };

  // reset to original position elements of card
  Slider.prototype.resetCardElsPosition = function () {
    var self = this;
    var card = this.cards[this.currentIndex];

    var cardLogo = card.querySelector('.card__logo');
    var cardPrice = card.querySelector('.card__price');
    var cardTitle = card.querySelector('.card__title');
    var cardSubtitle = card.querySelector('.card__subtitle');
    var cardImage = card.querySelector('.card__image');
    var cardWishList = card.querySelector('.card__wish-list');
    var cardCategory = card.querySelector('.card__category');
    var cardWillAnimate = card.querySelectorAll('.card__will-animate');

    // move card elements to original position
    cardWillAnimate.forEach(function (el) {
      el.style.transition = 'transform 0.5s ease-out';
    });

    cardLogo.style.transform = '';
    cardPrice.style.transform = '';

    cardTitle.style.transform = '';
    cardSubtitle.style.transform = '';

    cardImage.style.transform = '';
    cardWishList.style.transform = '';
    cardCategory.style.transform = '';

    // clear transitions
    setTimeout(function () {
      card.style.transform = '';
      card.style.transition = '';

      cardWillAnimate.forEach(function (el) {
        el.style.transition = '';
      });
    }, 500);

  };

  // slide card while dragging
  Slider.prototype.moveCard = function (diff) {

    var card = this.cards[this.currentIndex];

    card.style.transform = 'translateX(calc(' + diff + 'px - 50%))';
    diff *= -1;

    this.moveCardEls(diff);
  };

  // create parallax effect on card elements sliding them
  Slider.prototype.moveCardEls = function (diff) {
    var card = this.cards[this.currentIndex];

    var cardLogo = card.querySelector('.card__logo');
    var cardPrice = card.querySelector('.card__price');
    var cardTitle = card.querySelector('.card__title');
    var cardSubtitle = card.querySelector('.card__subtitle');
    var cardImage = card.querySelector('.card__image');
    var cardWishList = card.querySelector('.card__wish-list');
    var cardCategory = card.querySelector('.card__category');
    var cardWillAnimate = card.querySelectorAll('.card__will-animate');

    cardLogo.style.transform = 'translateX(' + (diff / this.ratio) + 'px)';
    cardPrice.style.transform = 'translateX(' + (diff / this.ratio) + 'px)';

    cardTitle.style.transform = 'translateX(' + (diff / (this.ratio * 0.90)) + 'px)';
    cardSubtitle.style.transform = 'translateX(' + (diff / (this.ratio * 0.85)) + 'px)';

    cardImage.style.transform = 'translateX(' + (diff / (this.ratio * 0.35)) + 'px)';

    cardWishList.style.transform = 'translateX(' + (diff / (this.ratio * 0.85)) + 'px)';
    cardCategory.style.transform = 'translateX(' + (diff / (this.ratio * 0.65)) + 'px)';

  };

  // crate listener here for when screen is larger than medium i.e. large, xl, xxl 
  // if document.width > 800px create slider 
  // append slide dots 
  //  check if ther is slider and reset 
  // else delte any sliders and d-none dots

  // create slider
  var slider = new Slider();

})();

</script>
           <!-- Nike 19 -->
      <script >
        // Slider(all Slides in a container)
        const slider = document.querySelector(".slider")
        // All trails 
        const trail = document.querySelector(".trail").querySelectorAll("div")

        // Transform value
        let value = 0
        // trail index number
        let trailValue = 0
        // interval (Duration)
        let interval = 94000

        // Function to slide forward
        const slide = (condition) => {
            // CLear interval
            clearInterval(start)
            // update value and trailValue
            condition === "increase" ? initiateINC() : initiateDEC()
            // move slide
            move(value, trailValue)
            // Restart Animation
            animate()
            // start interal for slides back 
            start = setInterval(() => slide("increase"), interval);
        }

        // function for increase(forward, next) configuration
        const initiateINC = () => {
            // Remove active from all trails
            trail.forEach(cur => cur.classList.remove("active"))
            // increase transform value
            value === 75 ? value = 0 : value += 25
            // update trailValue based on value
            trailUpdate()
        }

        // function for decrease(backward, previous) configuration
        const initiateDEC = () => {
            // Remove active from all trails
            trail.forEach(cur => cur.classList.remove("active"))
            // decrease transform value
            value === 0 ? value = 75 : value -= 25
            // update trailValue based on value
            trailUpdate()
        }

        // function to transform slide 
        const move = (S, T) => {
            // transform slider
            slider.style.transform = `translateX(-${S}%)`
            //add active class to the current trail
            trail[T].classList.add("active")
        }

        const tl = gsap.timeline({defaults: {duration: 0.6, ease: "power2.inOut"}})
        tl.from(".bg", {x: "-100%", opacity: 0})
          .from("p", {opacity: 0}, "-=0.3")
          .from("h1", {opacity: 0, y: "30px"}, "-=0.3")
          .from("button", {opacity: 0, y: "-40px"}, "-=0.8")

        // function to restart animation
        const animate = () => tl.restart()

        // function to update trailValue based on slide value
        const trailUpdate = () => {
            if (value === 0) {
                trailValue = 0
            } else if (value === 25) {
                trailValue = 1
            } else if (value === 50) {
                trailValue = 2
            } else  {
                trailValue = 3
            } 
            // else {
                // trailValue = 4
            // }
        }   

        // Start interval for slides
        let start = setInterval(() => slide("increase"), interval)

        // Next  and  Previous button function (SVG icon with different classes)
        document.querySelectorAll("svg").forEach(cur => {
            // Assign function based on the class Name("next" and "prev")
            cur.addEventListener("click", () => cur.classList.contains("next") ? slide("increase") : slide("decrease"))
        })

        // function to slide when trail is clicked
        const clickCheck = (e) => {
            // CLear interval
            clearInterval(start)
            // remove active class from all trails
            trail.forEach(cur => cur.classList.remove("active"))
            // Get selected trail
            const check = e.target
            // add active class
            check.classList.add("active")

            // Update slide value based on the selected trail
            if(check.classList.contains("box1")) {
                value = 0
            } else if (check.classList.contains("box2")) {
                value = 25
            } else if (check.classList.contains("box3")) {
                value = 50
            } else  {
                value = 75
            } 
            // else {
                // value = 80
            // }
            // update trail based on value
            trailUpdate()
            // transfrom slide
            move(value, trailValue)
            // start animation
            animate()
            // start interval
            start = setInterval(() => slide("increase"), interval)
        }

        // Add function to all trails
        trail.forEach(cur => cur.addEventListener("click", (ev) => clickCheck(ev)))

        // Mobile touch Slide Section
        const touchSlide = (() => {
           let start, move, change, sliderWidth

            // Do this on initial touch on screen
            slider.addEventListener("touchstart", (e) => {
                // get the touche position of X on the screen
                start = e.touches[0].clientX
                // (each slide with) the width of the slider container divided by the number of slides
                sliderWidth = slider.clientWidth/trail.length
            })
            
            // Do this on touchDrag on screen
            slider.addEventListener("touchmove", (e) => {
                // prevent default function
                e.preventDefault()
                // get the touche position of X on the screen when dragging stops
                move = e.touches[0].clientX
                // Subtract initial position from end position and save to change variabla
                change = start - move
            })

            const mobile = (e) => {
                // if change is greater than a quarter of sliderWidth, next else Do NOTHING
                change > (sliderWidth/4)  ? slide("increase") : null;
                // if change * -1 is greater than a quarter of sliderWidth, prev else Do NOTHING
                (change * -1) > (sliderWidth/4) ? slide("decrease") : null;
                // reset all variable to 0
                [start, move, change, sliderWidth] = [0,0,0,0]
            }
            // call mobile on touch end
            slider.addEventListener("touchend", mobile)
        })();
        </script>
            
    
        <div class="round-card first d-none" style="">
        
          <span class="text" style="">
          <h3 class='card-title' style="">Reinforced Concrete Retaining Walls</h3>
          <h5>Steel Rebar Reinforcement </h5>
          <h5 class="card-subtitle">Has ultimate flexural strength greater than block  </h5>
          <h5>up to 30000 lbs of lateral resistance</h5>
          <h5 class="">1-4 weeks completion time depending on size</h5>
          <h5>Poured in one day</h5>
          <h5>Low maintainance </h5>
          <h5>Fire & Water Resistant  </h5>
          
           <%= link_to 'Schedule a Project', new_dashboard_url, class:'card-button' %>
          
        
        </span>
      </div>
      
  
      <div class="round-card second" style="" >
       <%= image_tag("no-bg-elements/framework-red-basement-front-top-nobg.png",alt: "formed walls foundation, basement, house" , class:"formwork-image", :style => "") %>
        <span class="text" style="">
          <h3 class='card-title' style="">Medium and Large Projects </h3>
        <h5>Structural Projects</h5> 
        <h5>Foundation Walls</h5>
        <h5 class="">Basement Walls </h5>
        <h5>Home Walls</h5>
        <h5>Parking Structure Walls</h5>
        <h5 class="">Lake Seawalls </h5>
        <%# <h5 class="gray">Residential and commercial retaining wall</h3> %>
        <%= link_to 'Project Gallery', home_gallery_url, class: 'card-button'%>
        </span>
      </div>
      <br>
      <div class="round-card third" style="" >
           <%= image_tag("no-bg-elements/framework-basement-top-nobg.png",alt: "formed walls foundation, basement, house" , class:"formwork-image", :style => "") %>
           
            <span class="text" style="">
          <h3 class='card-title' style="">Concrete Steel Forms / Panels</h3>
          <h5 class="card-subtitle d-none">Industry Leading Performance </h5>
          <h5>
          Full 2”x2” crossmember support angle every foot for extra reinforcement.
          </h5>
          <h5>
           1,000 psf load-rated system
          </h5>
            <h5>
          100% sealed birch plywood face prevents moisture absorption</h5>
          <h5>
            stronger than fir plywood.
          </h5>
          <%# <h6>
           Sealed Birch plywood face prevents moisture absorption, eliminates
          grain transfer for a smooth finish after removal.
          </h6> %>
         <%= link_to 'Video Gallery', home_about_url, class:'card-button' %>

         <%# link_to 'Our Forms', home_about_url, class:'card-button' %>
        </span>
       
      </div>

      <div class="container-bs mt-5" >
        <%# <!- Contact Form  %>
        <% if user_signed_in? %>
          <h3>Add a project using this project form </h3>
          <%= render 'shared/project'%>
      
        <% end %> 
      </div> <!-- end of col -->

    
      <div class="col-12">

        <%# Retainging walls explained  %>
        <%# <div class="mobile"> %>
        <iframe width="90%" height="500" src="https://www.youtube.com/embed/UummY_mo85Y" title="YouTube video player" frameborder="0" allow=" encrypted-media; picture-in-picture" allowfullscreen></iframe>
        <%# </div> %>
           <!-- end of row -->
          <!-- end of container -->
          <!-- end of form -->
          <!-- end of contact -->

      </div>
  
      <%# end top container  %>
    <script>
  
      var skinnyDevice = window.matchMedia("(max-width: 600px)");
      var shortDevice = window.matchMedia("(max-height: 400px)");
      var logoSrcDesktop = "modern-blue-logos/modern-logo-nobg/modern-logo-full-shortname-bg-nobg.png"

      var logoSrcMobile = "modern-blue-logos/modern-logo-nobg/modern-logo-name-short-bg-nobg-250x200.png"
      var responsiveLogo = skinnyDevice.matches? logoSrcMobile : logoSrcDesktop; 

        // handleDeviceChange(smallDevice);
        // load page image static, schroll till img is 30% from top.
        // cat 30% get img position from top and right 
        // change position to fixed and set position.
        // at scroll 400 change background img. 
        // at 800 change to static and set position. 
        
      var imgEl = document.getElementById("wall-img-png");
   
      var imgCont = document.getElementById("wall-img");
      console.log(imgCont)
      console.log('imgCont logged');
    

      var imgContParent = imgCont.parentNode;
      console.log(imgContParent);    
      var imgWallFront = '<%= asset_path 'no-bg-elements/wall-front-nobg.png' %>';

      var imgWallFrontFull = '<%= asset_path 'no-bg-elements/wall-front-full-nobg.png' %>';

      var imgWallAngleFront = '<%= asset_path 'no-bg-elements/wall-front-angle-nobg.png' %>';

      var imgWallLabeled = '<%= asset_path 'no-bg-elements/wall-labeled-nobg.png' %>';

      // var imgWallSide = 'assets/no-bg-elements/wall-side-nobg.png';
      var imgWallSide = '<%= asset_path 'no-bg-elements/wall-side-nobg.png' %>';

      var imgWallSideTop = '<%= asset_path 'no-bg-elements/wall-side-nobg.png' %>';

      var imgWallBackDirtLeft = '<%= asset_path 'no-bg-elements/wall-rear-left-dirt-nobg.png' %>';

      var imgWallBackDirtRight ='<%= asset_path 'no-bg-elements/wall-rear-right-dirt-nobg.png' %>';

      var imgWallBackRight = 
      '<%= asset_path 'no-bg-elements/wall-rear-right-nobg.png'%>';


      //   n 3.1 you just get rid of the 'images' part of the path. So an image that lives in /assets/images/example.png will actually be accessible in a get request at this url - /assets/example.png

      // Because the assets/images folder gets generated along with a new 3.1 app, this is the convention that they probably want you to follow. I think that's where image_tag will look for it, but I haven't tested that yet.
      //You'll want to change the extension of your css file from .css.scss to .css.scss.erb and do:

      // background-image:url(<%=asset_path "no-bg-elements/wall-side-nobg.png"%>);
      // You may need to do a "hard refresh" to see changes. CMD+SHIFT+R on OSX browsers.

      // In production, make sure

      // rm -rf public/assets    
      // bundle exec rake assets:precompile RAILS_ENV=production
      // happens upon deployment.

      // Share
      // Improve this answer


      function getElPos() {
        var contPos = imgCont.getBoundingClientRect();
        return contPos
       }
      window.onscroll = function()  {
        stickyScroll()
       };

      var changedImage = false; 
      var flippedImage = false;

      function stickyScroll() {

        var {x, y, top, right, bottom, left, width, height  } = getElPos();
        var scrollTop = document.body.scrollTop || document.documentElement.scrollTop;
        // var elContY = imgCont.offsetTop;
        console.log('scrollTop');
        console.log(scrollTop)
        console.log('logged scrollTop');
        
        if ( skinnyDevice.matches? scrollTop < 50 : scrollTop < 50 ) {
          console.log('scrollTop > 50');
          // imgCont.style.position = 'static';
          console.log(changedImage);
          if (changedImage == true) {
            console.log('changing image below-----------');
            console.log(changedImage)
            imgEl.src = imgWallSide;
            changedImage = false; 
            console.log(changedImage)
            setTimeout(function(){
              imgEl.classList.remove('flipped');
              flippedImage = false;
            }, 1000);  
          }
        }
        
        if ( skinnyDevice.matches? scrollTop > 100 : scrollTop > 100 ){
          console.log(x, y);
          console.log(width, height);
          console.log('scrollTop > 100');
          imgEl.src = imgWallAngleFront;
          changedImage = true;
        }
        if (skinnyDevice.matches? scrollTop > 200 : scrollTop > 150){
          console.log('psition > 200/150');
          imgEl.src = imgWallFrontFull;
          console.log(imgEl.src);
        }
        if (skinnyDevice.matches? scrollTop > 300 : scrollTop > 200 ) {
          if (flippedImage && !imgEl.classList.contains('flipped')) {
            imgEl.classList.add('flipped');
          }
          console.log('scrollposition > 300/200') ;
          imgEl.src = imgWallFront;
          console.log(imgEl.src);
        }
        if (skinnyDevice.matches? scrollTop > 350 : scrollTop > 250) {
        console.log('changing position to static after 350/250 scrolltop')
            if (imgEl.classList.contains('flipped')) {
              imgEl.classList.remove('flipped');
            }
            imgEl.src = imgWallLabeled;
            imgEl.style.width = 
            console.log(imgEl.src);
        }
        if (skinnyDevice.matches? scrollTop > 400 : scrollTop > 300) {
          flippedImage = true;
        }
      }
  </script>